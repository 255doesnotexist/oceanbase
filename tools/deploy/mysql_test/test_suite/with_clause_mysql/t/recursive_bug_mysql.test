# owner: dachuan.sdc
# owner group: sql2
# tags: optimizer

--disable_warnings
drop database if exists cte_st;
--enable_warnings
create database cte_st;
use cte_st;

--result_format 4
--error 1146
with cte1(c1, c2) as
  (select 1, '0' from dual
   union all select 2, '1' from dual
  ),
cte2(c1, c2) as
  (select '0', 1 from dual
   union all select cte1.c2, cte1.c1 from cte2, cte1 where 10 = cte2.c1)
select * from cte2;

--error 1146
WITH my_cte AS (SELECT 1 AS n UNION ALL SELECT 1+n FROM my_cte WHERE n<10 ) SELECT * FROM my_cte;

WITH recursive my_cte AS (SELECT 1 AS n UNION ALL SELECT 1+n FROM my_cte WHERE n<10 ) SELECT * FROM my_cte;
--error 3574
WITH recursive my_cte AS (SELECT 1+n FROM my_cte WHERE n<10 UNION ALL SELECT 1 AS n) SELECT * FROM my_cte;
--error 1146
WITH my_cte AS (SELECT 1+n FROM my_cte WHERE n<10 UNION ALL SELECT 1 AS n) SELECT * FROM my_cte;



create table t1(deptno number, loc varchar(100));
CREATE TABLE t2(EMPNO DECIMAL(4) UNIQUE,ENAME VARCHAR(10) NOT NULL,JOB VARCHAR(9),MGR DECIMAL(4),HIREDATE DATE,SAL DECIMAL(7,2),COMM DECIMAL(7,2),DEPTNO INT);
--error 1066
WITH
temp AS (SELECT e.deptno,e.loc FROM t1 e WHERE e.loc IN ('New York','ChiCaGo') ORDER BY e.deptno),
temp AS (SELECT p.deptno,p.job FROM t2 p WHERE p.job NOT IN ('CLERK','ANALYST') ORDER BY p.deptno)
SELECT e.deptno,e.loc,p.job FROM temp e,temp p WHERE e.deptno = p.deptno ORDER BY 1,2,3;


CREATE TABLE employees (
  id         INT PRIMARY KEY NOT NULL,
  name       VARCHAR(100) NOT NULL,
  manager_id INT NULL,
  INDEX (manager_id)
);
INSERT INTO employees VALUES(333, 'Yasmina', NULL);
INSERT INTO employees VALUES(198, 'John', 333);
INSERT INTO employees VALUES(692, 'Tarek', 333);
INSERT INTO employees VALUES(29, 'Pedro', 198);
INSERT INTO employees VALUES(4610, 'Sarah', 29);
INSERT INTO employees VALUES(72, 'Pierre', 29);
INSERT INTO employees VALUES(123, 'Adil', 692);

## result not correct
WITH RECURSIVE employee_paths (id, name, path) AS
(
  SELECT id, name, 1
    FROM employees
    WHERE manager_id IS NULL
  UNION ALL
  SELECT e.id, e.name, CONCAT(ep.path, ',', e.id)
    FROM employee_paths ep JOIN employees e
      ON ep.id = e.manager_id
)
SELECT * FROM employee_paths ORDER BY name;


WITH RECURSIVE employee_paths (id, name, path) AS
(
  SELECT id, name, CAST(id AS CHAR(200))
    FROM employees
    WHERE manager_id IS NULL
  UNION ALL
  SELECT e.id, e.name, CONCAT(ep.path, ',', e.id)
    FROM employee_paths AS ep JOIN employees AS e
      ON ep.id = e.manager_id
)
SELECT * FROM employee_paths ORDER BY name;


--echo

create table t1_from_cte as (with recursive cte as (select 1 as c union all select c+1 from cte where c < 3) select * from cte);
create table t2_from_cte as (with recursive cte(c) as (select 1 union all select c+1 from cte where c < 3) select * from cte);
create table t3_from_cte as (with recursive cte as (select 1 as c union all select c+1 from cte where c < 3) select c as cc from cte);

select * from t1_from_cte;
select * from t2_from_cte;
select * from t3_from_cte;

desc t1_from_cte;
desc t2_from_cte;
desc t3_from_cte;

--source mysql_test/include/show_create_table_old_version_replica2.inc
show create table t1_from_cte;
--source mysql_test/include/show_create_table_old_version_replica2.inc
show create table t2_from_cte;
--source mysql_test/include/show_create_table_old_version_replica2.inc
show create table t3_from_cte;


create view v1_from_cte as (with recursive cte as (select 1 as c union all select c+1 from cte where c < 3) select * from cte);
create view v2_from_cte as (with recursive cte(c) as (select 1 union all select c+1 from cte where c < 3) select * from cte);
create view v3_from_cte as (with recursive cte as (select 1 as c union all select c+1 from cte where c < 3) select c as cc from cte);

select * from v1_from_cte;
select * from v2_from_cte;
select * from v3_from_cte;

desc v1_from_cte;
desc v2_from_cte;
desc v3_from_cte;

--source mysql_test/include/show_create_table_old_version_replica2.inc
show create view v1_from_cte;
--source mysql_test/include/show_create_table_old_version_replica2.inc
show create view v2_from_cte;
--source mysql_test/include/show_create_table_old_version_replica2.inc
show create view v3_from_cte;


drop database cte_st;