drop database if exists cte_st;
create database cte_st;
use cte_st;
result_format: 4
with cte1(c1, c2) as
  (select 1, '0' from dual
   union all select 2, '1' from dual
  ),
cte2(c1, c2) as
  (select '0', 1 from dual
   union all select cte1.c2, cte1.c1 from cte2, cte1 where 10 = cte2.c1)
select * from cte2;
ERROR 42S02: Table doesn't exist

WITH my_cte AS (SELECT 1 AS n UNION ALL SELECT 1+n FROM my_cte WHERE n<10 ) SELECT * FROM my_cte;
ERROR 42S02: Table doesn't exist

WITH recursive my_cte AS (SELECT 1 AS n UNION ALL SELECT 1+n FROM my_cte WHERE n<10 ) SELECT * FROM my_cte;
+------+
| n    |
+------+
|    1 |
|    2 |
|    3 |
|    4 |
|    5 |
|    6 |
|    7 |
|    8 |
|    9 |
|   10 |
+------+
WITH recursive my_cte AS (SELECT 1+n FROM my_cte WHERE n<10 UNION ALL SELECT 1 AS n) SELECT * FROM my_cte;
ERROR HY000: Recursive Common Table Expression should have one or more non-recursive query blocks followed by one or more recursive ones
WITH my_cte AS (SELECT 1+n FROM my_cte WHERE n<10 UNION ALL SELECT 1 AS n) SELECT * FROM my_cte;
ERROR 42S02: Table doesn't exist


create table t1(deptno number, loc varchar(100));
CREATE TABLE t2(EMPNO DECIMAL(4) UNIQUE,ENAME VARCHAR(10) NOT NULL,JOB VARCHAR(9),MGR DECIMAL(4),HIREDATE DATE,SAL DECIMAL(7,2),COMM DECIMAL(7,2),DEPTNO INT);
WITH
temp AS (SELECT e.deptno,e.loc FROM t1 e WHERE e.loc IN ('New York','ChiCaGo') ORDER BY e.deptno),
temp AS (SELECT p.deptno,p.job FROM t2 p WHERE p.job NOT IN ('CLERK','ANALYST') ORDER BY p.deptno)
SELECT e.deptno,e.loc,p.job FROM temp e,temp p WHERE e.deptno = p.deptno ORDER BY 1,2,3;
ERROR 42000: Not unique table/alias: 'temp'

CREATE TABLE employees (
  id         INT PRIMARY KEY NOT NULL,
  name       VARCHAR(100) NOT NULL,
  manager_id INT NULL,
  INDEX (manager_id)
);
INSERT INTO employees VALUES(333, 'Yasmina', NULL);
INSERT INTO employees VALUES(198, 'John', 333);
INSERT INTO employees VALUES(692, 'Tarek', 333);
INSERT INTO employees VALUES(29, 'Pedro', 198);
INSERT INTO employees VALUES(4610, 'Sarah', 29);
INSERT INTO employees VALUES(72, 'Pierre', 29);
INSERT INTO employees VALUES(123, 'Adil', 692);

WITH RECURSIVE employee_paths (id, name, path) AS
(
  SELECT id, name, 1
    FROM employees
    WHERE manager_id IS NULL
  UNION ALL
  SELECT e.id, e.name, CONCAT(ep.path, ',', e.id)
    FROM employee_paths ep JOIN employees e
      ON ep.id = e.manager_id
)
SELECT * FROM employee_paths ORDER BY name;
+------+---------+------+
| id   | name    | path |
+------+---------+------+
|  123 | Adil    |    1 |
|  198 | John    |    1 |
|   29 | Pedro   |    1 |
|   72 | Pierre  |    1 |
| 4610 | Sarah   |    1 |
|  692 | Tarek   |    1 |
|  333 | Yasmina |    1 |
+------+---------+------+

WITH RECURSIVE employee_paths (id, name, path) AS
(
  SELECT id, name, CAST(id AS CHAR(200))
    FROM employees
    WHERE manager_id IS NULL
  UNION ALL
  SELECT e.id, e.name, CONCAT(ep.path, ',', e.id)
    FROM employee_paths AS ep JOIN employees AS e
      ON ep.id = e.manager_id
)
SELECT * FROM employee_paths ORDER BY name;
+------+---------+-----------------+
| id   | name    | path            |
+------+---------+-----------------+
|  123 | Adil    | 333,692,123     |
|  198 | John    | 333,198         |
|   29 | Pedro   | 333,198,29      |
|   72 | Pierre  | 333,198,29,72   |
| 4610 | Sarah   | 333,198,29,4610 |
|  692 | Tarek   | 333,692         |
|  333 | Yasmina | 333             |
+------+---------+-----------------+

create table t1_from_cte as (with recursive cte as (select 1 as c union all select c+1 from cte where c < 3) select * from cte);
create table t2_from_cte as (with recursive cte(c) as (select 1 union all select c+1 from cte where c < 3) select * from cte);
create table t3_from_cte as (with recursive cte as (select 1 as c union all select c+1 from cte where c < 3) select c as cc from cte);

select * from t1_from_cte;
+------+
| c    |
+------+
|    1 |
|    2 |
|    3 |
+------+
select * from t2_from_cte;
+------+
| c    |
+------+
|    1 |
|    2 |
|    3 |
+------+
select * from t3_from_cte;
+------+
| cc   |
+------+
|    1 |
|    2 |
|    3 |
+------+

desc t1_from_cte;
+-------+-----------+------+-----+---------+-------+
| Field | Type      | Null | Key | Default | Extra |
+-------+-----------+------+-----+---------+-------+
| c     | bigint(1) | YES  |     | NULL    |       |
+-------+-----------+------+-----+---------+-------+
desc t2_from_cte;
+-------+-----------+------+-----+---------+-------+
| Field | Type      | Null | Key | Default | Extra |
+-------+-----------+------+-----+---------+-------+
| c     | bigint(1) | YES  |     | NULL    |       |
+-------+-----------+------+-----+---------+-------+
desc t3_from_cte;
+-------+-----------+------+-----+---------+-------+
| Field | Type      | Null | Key | Default | Extra |
+-------+-----------+------+-----+---------+-------+
| cc    | bigint(1) | YES  |     | NULL    |       |
+-------+-----------+------+-----+---------+-------+

show create table t1_from_cte;
Table	Create Table
t1_from_cte	CREATE TABLE `t1_from_cte` (
  `c` bigint(1) DEFAULT NULL
) DEFAULT CHARSET = utf8mb4 COMPRESSION = 'lz4_1.0' REPLICA_NUM = NUM BLOCK_SIZE = SIZE USE_BLOOM_FILTER = FALSE TABLET_SIZE = SIZE PCTFREE = 10
show create table t2_from_cte;
Table	Create Table
t2_from_cte	CREATE TABLE `t2_from_cte` (
  `c` bigint(1) DEFAULT NULL
) DEFAULT CHARSET = utf8mb4 COMPRESSION = 'lz4_1.0' REPLICA_NUM = NUM BLOCK_SIZE = SIZE USE_BLOOM_FILTER = FALSE TABLET_SIZE = SIZE PCTFREE = 10
show create table t3_from_cte;
Table	Create Table
t3_from_cte	CREATE TABLE `t3_from_cte` (
  `cc` bigint(1) DEFAULT NULL
) DEFAULT CHARSET = utf8mb4 COMPRESSION = 'lz4_1.0' REPLICA_NUM = NUM BLOCK_SIZE = SIZE USE_BLOOM_FILTER = FALSE TABLET_SIZE = SIZE PCTFREE = 10

create view v1_from_cte as (with recursive cte as (select 1 as c union all select c+1 from cte where c < 3) select * from cte);
create view v2_from_cte as (with recursive cte(c) as (select 1 union all select c+1 from cte where c < 3) select * from cte);
create view v3_from_cte as (with recursive cte as (select 1 as c union all select c+1 from cte where c < 3) select c as cc from cte);

select * from v1_from_cte;
+------+
| c    |
+------+
|    1 |
|    2 |
|    3 |
+------+
select * from v2_from_cte;
+------+
| c    |
+------+
|    1 |
|    2 |
|    3 |
+------+
select * from v3_from_cte;
+------+
| cc   |
+------+
|    1 |
|    2 |
|    3 |
+------+

desc v1_from_cte;
+-------+-----------+------+-----+---------+-------+
| Field | Type      | Null | Key | Default | Extra |
+-------+-----------+------+-----+---------+-------+
| c     | bigint(1) | NO   |     |         |       |
+-------+-----------+------+-----+---------+-------+
desc v2_from_cte;
+-------+-----------+------+-----+---------+-------+
| Field | Type      | Null | Key | Default | Extra |
+-------+-----------+------+-----+---------+-------+
| c     | bigint(1) | NO   |     |         |       |
+-------+-----------+------+-----+---------+-------+
desc v3_from_cte;
+-------+-----------+------+-----+---------+-------+
| Field | Type      | Null | Key | Default | Extra |
+-------+-----------+------+-----+---------+-------+
| cc    | bigint(1) | NO   |     |         |       |
+-------+-----------+------+-----+---------+-------+

show create view v1_from_cte;
View	Create View	character_set_client	collation_connection
v1_from_cte	CREATE VIEW `v1_from_cte` AS WITH RECURSIVE `cte` as ((select 1 AS `c`) union  all (select (`cte`.`c` + 1) AS `c+1` from `cte` where (`cte`.`c` < 3))) select `cte`.`c` AS `c` from  cte	utf8mb4	utf8mb4_general_ci
show create view v2_from_cte;
View	Create View	character_set_client	collation_connection
v2_from_cte	CREATE VIEW `v2_from_cte` AS WITH RECURSIVE `cte`(c) as ((select 1 AS `1`) union  all (select (`cte`.`c` + 1) AS `c+1` from `cte` where (`cte`.`c` < 3))) select `cte`.`c` AS `c` from  cte	utf8mb4	utf8mb4_general_ci
show create view v3_from_cte;
View	Create View	character_set_client	collation_connection
v3_from_cte	CREATE VIEW `v3_from_cte` AS WITH RECURSIVE `cte` as ((select 1 AS `c`) union  all (select (`cte`.`c` + 1) AS `c+1` from `cte` where (`cte`.`c` < 3))) select `cte`.`c` AS `cc` from  cte	utf8mb4	utf8mb4_general_ci

drop database cte_st;
